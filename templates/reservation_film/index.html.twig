{% extends 'base.html.twig' %}

{% block title %}Réservation de Film{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/reservation.css') }}">
{% endblock %}

{% block body %}
<div class="container mt-5">
    <h1 class="text-center mb-4">Réservation de Film</h1>
    <form id="reservationForm" method="post" action="{{ path("reserve") }}">
        <div class="mb-3">
            <label for="cinema" class="form-label">Cinéma</label>
            <select id="cinema" class="form-select" name="cinema">
                <option value="">Sélectionnez un cinéma</option>
                {% for cinema in cinemas %}
                    <option value="{{ cinema.id }}">{{ cinema.ville }}</option>
                {% endfor %}
            </select>
        </div>
        <div class="mb-3">
            <label for="film" class="form-label">Film</label>
            <select id="film" class="form-select" disabled name="film">
                <option value="">Sélectionnez un film</option>
            </select>
        </div>
        <div class="mb-3">
            <label for="seance" class="form-label">Séance</label>
            <select id="seance" class="form-select" disabled name="seance">
                <option value="">Sélectionnez une séance</option>
            </select>
        </div>
        <div class="mb-3">
            <label class="form-label">Places standards</label>
            <div class="d-flex align-items-center gap-2">
                <button type="button" class="btn btn-outline-secondary" id="minusStandard">–</button>
                <span id="nbSiegesDisplay" class="fs-5">0</span>
                <button type="button" class="btn btn-outline-primary" id="plusStandard">+</button>
                <span id="nbPlace" class="text-muted ms-3">Places dispo : 0</span>
            </div>
            <input type="hidden" name="nbSieges" id="nbSieges" value="0" />
        </div>

        <div class="mb-3">
            <label class="form-label">Places PMR</label>
            <div class="d-flex align-items-center gap-2">
                <button type="button" class="btn btn-outline-secondary" id="minusPMR">–</button>
                <span id="nbSiegesPMRDisplay" class="fs-5">0</span>
                <button type="button" class="btn btn-outline-primary" id="plusPMR">+</button>
                <span id="nbPlacePMR" class="text-muted ms-3">Places PMR dispo : 0</span>
            </div>
            <input type="hidden" name="nbSiegesPMR" id="nbSiegesPMR" value="0" />
        </div>

        <div class="mb-3">
            <label class="form-label">Prix total</label>
            <p id="prixTotal" class="fw-bold">0 €</p>
        </div>
        <button type="submit" class="btn btn-primary" disabled>Réserver</button>
    </form>
</div>

{% block javascripts %}
    {{ parent() }}

    <script>

        $(document).ready(function() {
            const selectedCinema = "{{ cinemaId|default('') }}";
            const selectedFilm = "{{ filmId|default('') }}";
            const selectedSeance = "{{ seanceId|default('') }}";
            var cinemaId;
            // Gestion du prix total
            $('#nbSieges, #nbSiegesPMR').on('input', function () {
                calculerPrixTotal();
            });
            // Gestion de la soumission du formulaire et validation du prix
            $('#reservationForm').off('submit').on('submit', function (e) {
                const total = calculerPrixTotal();
                const confirmMsg = `Le montant total de votre réservation est de ${total.toFixed(2)} €. Souhaitez-vous continuer ?`;
                if (!confirm(confirmMsg)) {
                    e.preventDefault(); // annule la soumission si l'utilisateur annule
                }
            });
            $('#cinema').change(function() {
                cinemaId = $(this).val();
                if (cinemaId) {
                    $.ajax({
                        url: '{{ path("getFilmByCinema") }}',
                        type: 'GET',
                        data: { cinemaId: cinemaId },
                        success: function(data) {
                            $('#film').html('<option value="">Sélectionnez un film</option>');
                            $.each(data, function(key, film) {
                                $('#film').append('<option value="' + film.id + '">' + film.titre + '</option>');
                            });
                            $('#film').prop('disabled', false);
                            if (selectedFilm) {
                                $('#film').val(selectedFilm).trigger('change');
                            }
                        }
                    });
                } else {
                    $('#film').html('<option value="">Sélectionnez un film</option>').prop('disabled', true);
                    $('#seance').html('<option value="">Sélectionnez une séance</option>').prop('disabled', true);
                    $('#nbSieges, #nbSiegesPMR').prop('disabled', true);
                    $('button[type="submit"]').prop('disabled', true);
                }
            });

            $('#film').change(function() {
                var filmId = $(this).val();
                if (filmId) {
                    $.ajax({
                        url: '{{ path("getSeanceByFilmAndCinema") }}',
                        type: 'GET',
                        data: { filmId: filmId, cinemaId: cinemaId },
                        success: function(data) {
                            $('#seance').html('<option value="">Sélectionnez une séance</option>');
                            $.each(data, function(key, seance) {
                                console.log(seance)
                                // Formater la date pour affichage lisible
                                const rawDate = new Date(seance.dateDebut.date);
                                const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
                                const dateStr = rawDate.toLocaleDateString('fr-FR', options);
                                const heure = rawDate.toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' });

                                $('#seance').append(
                                    `<option data-place-prix="${seance.prix}" data-place="${seance.nbSiege}" data-place-pmr="${seance.nbSiegePmr}" value="${seance.id}">
        ${dateStr} à ${heure} — ${seance.qualite} --- Prix de la place : ${seance.prix} €
    </option>`
                                );

                            });
                            $('#seance').prop('disabled', false);
                            if (selectedSeance) {
                                $('#seance').val(selectedSeance).trigger('change');
                            }
                        }
                    });
                } else {
                    $('#seance').html('<option value="">Sélectionnez une séance</option>').prop('disabled', true);
                    $('#nbSieges, #nbSiegesPMR').prop('disabled', true);
                    $('button[type="submit"]').prop('disabled', true);
                }
            });

            $('#seance').change(function() {
                if ($(this).val()) {
                    $('#nbSieges, #nbSiegesPMR').prop('disabled', false);
                    $('button[type="submit"]').prop('disabled', false);
                    var nbPlace = $(this).find(':selected').data('place');
                    var nbPlacePMR = $(this).find(':selected').data('place-pmr');
                    $('#nbPlace').text('Nombre de place disponible : ' + nbPlace);
                    $('#nbPlacePMR').text('Nombre de place disponible : ' + nbPlacePMR);
                    $('#nbSieges').attr('max', nbPlace);
                    $('#nbSiegesPMR').attr('max', nbPlacePMR);
                } else {
                    $('#nbSieges, #nbSiegesPMR').prop('disabled', true);
                    $('button[type="submit"]').prop('disabled', true);
                }
            });

            if (selectedCinema) {
                $('#cinema').val(selectedCinema).trigger('change');
            }
            function updateDisplay(field, display, max) {
                const val = parseInt(field.val());
                display.text(val);
                display.addClass('pulse');
                setTimeout(() => display.removeClass('pulse'), 300);
                calculerPrixTotal();
            }

            $('#plusStandard').off('click').on('click', function () {
                const field = $('#nbSieges');
                const max = parseInt($('#nbSieges').attr('max')) || 0;
                let val = parseInt(field.val());
                if (val < max) {
                    field.val(val + 1);
                    updateDisplay(field, $('#nbSiegesDisplay'), max);
                }
            });
            $('#minusStandard').off('click').on('click', function () {
                const field = $('#nbSieges');
                let val = parseInt(field.val());
                if (val > 0) {
                    field.val(val - 1);
                    updateDisplay(field, $('#nbSiegesDisplay'));
                }
            });

            $('#plusPMR').off('click').on('click', function () {
                const field = $('#nbSiegesPMR');
                const max = parseInt($('#nbSiegesPMR').attr('max')) || 0;
                let val = parseInt(field.val());
                if (val < max) {
                    field.val(val + 1);
                    updateDisplay(field, $('#nbSiegesPMRDisplay'), max);
                }
            });
            $('#minusPMR').off('click').on('click', function () {
                const field = $('#nbSiegesPMR');
                let val = parseInt(field.val());
                if (val > 0) {
                    field.val(val - 1);
                    updateDisplay(field, $('#nbSiegesPMRDisplay'));
                }
            });

        });

        /**
         * Calculer le prix total en fonction du nombre de sièges et du prix unitaire
         * @returns int {number}
         */
        function calculerPrixTotal()  {
            const prixUnitaire = parseFloat($('#seance option:selected').data('place-prix') || 0);
            const nbSieges = parseInt($('#nbSieges').val() || 0);
            const nbSiegesPMR = parseInt($('#nbSiegesPMR').val() || 0);
            const total = prixUnitaire * (nbSieges + nbSiegesPMR);
            $('#prixTotal').text(`${total.toFixed(2)} €`);
            return total;
        }


    </script>
{% endblock %}
{% endblock %}